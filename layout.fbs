// Copyright (c) 2019, IRIS-HEP
// All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
// 
// * Redistributions of source code must retain the above copyright notice, this
//   list of conditions and the following disclaimer.
// 
// * Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the following disclaimer in the documentation
//   and/or other materials provided with the distribution.
// 
// * Neither the name of the copyright holder nor the names of its
//   contributors may be used to endorse or promote products derived from
//   this software without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

include "interpretation.fbs";

namespace uproot_skyhook.layout_generated;

enum Compression: int {
  none = 0,
  zlib = 1,
  lzma = 2,
  old = 3,
  lz4 = 4
}

table Branch {
  local_offsets: [ulong] (required);
  page_seeks: [ulong] (required);
  compression: Compression;
  compressedbytes: [uint];
  uncompressedbytes: [uint] (required);
  basket_page_offsets: [uint] (required);
  basket_keylens: [uint];
  basket_data_borders: [uint];
}

table Column {
  interp: uproot_skyhook.interpretation_generated.Interpretation (required);
  title: string;
}

table File {
  location: string (required);
  uuid: string (required);
  branches: [Branch] (required);    // one for each column
}

table Dataset {
  name: string (required);
  treepath: string (required);
  colnames: [string] (required);
  columns: [Column] (required);
  files: [File] (required);
  global_offsets: [ulong] (required);
  location_prefix: string;
}

file_extension "rootlayout";
file_identifier "roly";
root_type Dataset;
